<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <!--由于我们的处理器映射器和处理器适配器存在多种,并且这俩个器都是需要通过前端控制器进行调用
      所以我们请求的非静态资源[静态资源是不受前端控制器大C来管理的],都要经过前端控制器

      过程:比如请求的是:http://localhost:8081/springmvc_tech_day01/user/login.action
      判断出url是以.action结尾的,经过大C[中央的CPU] - 大C去请求处理器映射器[才是去解析url] -
      由处理器映射器来找到真正的小c[控制层] - 返回一个执行链给大C - 由大C调用处理器适配器
      - 由适配器才是真正去执行小c中的程序的 - 返回一个ModelAndView对象[springmvc底层的对象]
      ModelAndView - Modle - 数据渲染的作用域  View - 逻辑视图名
      ModelAndView对象还是最终被返回给大C - 由大C去视图解析器 - 真正的将逻辑视图名导航到真正的视图
      并且将model中的数据渲染到真正的视图页面上.
  -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--初始化的参数最终都是被封装到当前配置的servlet的init方法中的ServletConfig对象
        此处也是可以不配置的,默认会到WEB-INF中去寻找springmvc-servlet.xml文件
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <!--<load-on-startup>1</load-on-startup>-->
  </servlet>

  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--所有的请求地址都要经过前端控制器[处理器相关的 - 小c]
        但是大C是不能处理静态资源文件的.
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--使用spring的监听器来加载spring相关的容器 - spring的配置文件-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--全局的初始化的参数-->

  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:springmvc.xml</param-value>
  </context-param>
</web-app>